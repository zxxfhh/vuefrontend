<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 100 100" xml:space="preserve"><desc>Copyright Opto 22</desc> 
<g>
<g id="shape">
	<rect y="74.984" fill="#CCCCCC" width="100" height="7.374"></rect>
	<polygon fill="#CCCCCC" points="54.545,72.951 42.02,72.951 37.71,69.921 18.855,69.921 18.855,44.87 47.475,44.87 54.545,51.066 	
		"></polygon>
	<rect x="12.929" y="46.474" fill="#CCCCCC" width="12.391" height="15.097"></rect>
	<rect x="48.754" y="52.4" fill="#CCCCCC" width="12.391" height="18.329"></rect>
	<rect x="10.774" y="50.783" fill="#CCCCCC" width="14.545" height="6.478"></rect>
	<rect x="55.421" y="51.066" fill="#CCCCCC" width="10.168" height="21.818"></rect>
	<rect x="65.387" y="52.646" fill="#CCCCCC" width="32.727" height="18.419"></rect>
	<rect x="81.919" y="46.756" fill="#CCCCCC" width="15.286" height="5.891"></rect>
	<polygon fill="#CCCCCC" points="97.205,45.476 81.919,45.476 81.919,33.086 99.226,33.086 	"></polygon>
	<circle fill="#CCCCCC" cx="54.141" cy="41.773" r="6.061"></circle>
	<rect x="2.694" y="71.537" fill="#CCCCCC" width="7.407" height="4.848"></rect>
	<rect x="17.576" y="69.921" fill="#CCCCCC" width="6.195" height="6.465"></rect>
	<rect x="49.562" y="69.921" fill="#CCCCCC" width="6.195" height="6.465"></rect>
	<rect x="67.475" y="69.921" fill="#CCCCCC" width="6.195" height="6.465"></rect>
	<rect x="83.367" y="69.921" fill="#CCCCCC" width="6.195" height="6.465"></rect>
	<rect x="26.465" y="32.21" fill="#CCCCCC" width="4.579" height="12.929"></rect>
	<rect x="25.589" y="37.867" fill="#CCCCCC" width="6.33" height="1.616"></rect>
	<path fill="#CCCCCC" d="M23.501,45.679h-2.828v-3.502c0-1.003-0.816-1.818-1.818-1.818h-8.081V37.53h8.081
		c2.562,0,4.646,2.084,4.646,4.646V45.679z"></path>
	<path fill="#CCCCCC" d="M44.579,49.113h-2.828v-3.502c0-2.563,2.084-4.646,4.646-4.646h8.889v2.828h-8.889
		c-1.002,0-1.818,0.815-1.818,1.818V49.113z"></path>
	<polygon fill="#CCCCCC" points="53.434,49.82 47.172,49.82 47.172,44.702 58.485,44.702 	"></polygon>
	<path fill="#CCCCCC" d="M36.162,45.409h-2.828v-3.098c0-2.488,2.084-4.512,4.646-4.512h15.892v2.828H37.98
		c-1.002,0-1.818,0.755-1.818,1.684V45.409z"></path>
	<path fill="#CCCCCC" d="M24.444,33.692c0-1.339,1.93-2.424,4.31-2.424s4.31,1.085,4.31,2.424"></path>
</g>
<g id="light">
	<rect x="65.387" y="52.646" fill="#F2F2F2" width="32.727" height="6.044"></rect>

		<rect x="26.465" y="39.483" fill="#F2F2F2" width="4.579" height="5.657"></rect>
		<rect x="26.465" y="33.692" fill="#F2F2F2" width="4.579" height="4.175"></rect>
	
	<rect x="1.212" y="34.062" fill="#F2F2F2" width="10.505" height="38.283"></rect>
</g>
<g id="linear">
	<linearGradient class="linear" id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="37.1717" y1="50.1229" x2="41.6162" y2="50.1229">
		<stop offset="0" style="stop-color:#FFFFFF"></stop>
		<stop offset="1" style="stop-color:#808080"></stop>
	</linearGradient>
	<rect class="linear" x="37.172" y="47.093" fill="url(#SVGID_1_)" width="4.444" height="6.061"></rect>
	<linearGradient class="linear" id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="43.596" y1="54.1633" x2="45.3737" y2="54.1633">
		<stop offset="0" style="stop-color:#FFFFFF"></stop>
		<stop offset="1" style="stop-color:#808080"></stop>
	</linearGradient>
	<rect class="linear" x="43.596" y="52.951" fill="url(#SVGID_2_)" width="1.778" height="2.424"></rect>
	<linearGradient class="linear" id="SVGID_3_" gradientUnits="userSpaceOnUse" x1="41.8182" y1="50.729" x2="47.1515" y2="50.729">
		<stop offset="0" style="stop-color:#FFFFFF"></stop>
		<stop offset="1" style="stop-color:#808080"></stop>
	</linearGradient>
	<rect class="linear" x="41.818" y="47.093" fill="url(#SVGID_3_)" width="5.333" height="7.273"></rect>
</g>
<g id="dark">
	<rect x="51.717" y="77.282" fill="#B3B3B3" width="45.051" height="5.076"></rect>
	<rect x="3.165" y="77.282" fill="#B3B3B3" width="45.051" height="5.076"></rect>
	<polygon fill="#B3B3B3" points="57.422,45.779 54.04,45.779 54.04,49.206 	"></polygon>
	<circle fill="#B3B3B3" cx="54.141" cy="41.773" r="2.02"></circle>
	<rect x="21.886" y="68.911" fill="#B3B3B3" width="30.101" height="1.01"></rect>

			<polygon fill="#B3B3B3" points="26.667,66.285 24.646,66.285 24.04,66.285 24.04,66.689 24.04,68.911 24.646,68.911 
				24.646,66.689 26.667,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="30.741,66.285 28.721,66.285 28.114,66.285 28.114,66.689 28.114,68.911 28.721,68.911 
				28.721,66.689 30.741,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="34.815,66.285 32.795,66.285 32.189,66.285 32.189,66.689 32.189,68.911 32.795,68.911 
				32.795,66.689 34.815,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="38.889,66.285 36.869,66.285 36.263,66.285 36.263,66.689 36.263,68.911 36.869,68.911 
				36.869,66.689 38.889,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="42.963,66.285 40.943,66.285 40.337,66.285 40.337,66.689 40.337,68.911 40.943,68.911 
				40.943,66.689 42.963,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="47.037,66.285 45.017,66.285 44.411,66.285 44.411,66.689 44.411,68.911 45.017,68.911 
				45.017,66.689 47.037,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="51.111,66.285 49.091,66.285 48.485,66.285 48.485,66.689 48.485,68.911 49.091,68.911 
				49.091,66.689 51.111,66.689 			"></polygon>

			<polygon fill="#B3B3B3" points="26.667,66.285 24.646,66.285 24.04,66.285 24.04,66.689 24.04,68.911 24.646,68.911 
				24.646,66.689 26.667,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="30.741,66.285 28.721,66.285 28.114,66.285 28.114,66.689 28.114,68.911 28.721,68.911 
				28.721,66.689 30.741,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="34.815,66.285 32.795,66.285 32.189,66.285 32.189,66.689 32.189,68.911 32.795,68.911 
				32.795,66.689 34.815,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="38.889,66.285 36.869,66.285 36.263,66.285 36.263,66.689 36.263,68.911 36.869,68.911 
				36.869,66.689 38.889,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="42.963,66.285 40.943,66.285 40.337,66.285 40.337,66.689 40.337,68.911 40.943,68.911 
				40.943,66.689 42.963,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="47.037,66.285 45.017,66.285 44.411,66.285 44.411,66.689 44.411,68.911 45.017,68.911 
				45.017,66.689 47.037,66.689 			"></polygon>
			<polygon fill="#B3B3B3" points="51.111,66.285 49.091,66.285 48.485,66.285 48.485,66.689 48.485,68.911 49.091,68.911 
				49.091,66.689 51.111,66.689 			"></polygon>

	<polygon fill="#B3B3B3" points="35.152,60.224 49.293,60.224 49.293,59.618 34.545,59.618 34.545,63.456 35.152,63.456 	"></polygon>
	<path fill="#B3B3B3" d="M28.485,62.85c-1.053,0-1.933-0.734-2.162-1.717c-0.038,0.162-0.06,0.331-0.06,0.505
		c0,1.227,0.995,2.222,2.222,2.222s2.222-0.995,2.222-2.222c0-0.174-0.022-0.343-0.06-0.505
		C30.418,62.117,29.538,62.85,28.485,62.85z"></path>
	<rect x="51.111" y="55.982" fill="#B3B3B3" width="4.444" height="6.869"></rect>
	<rect x="65.387" y="65.207" fill="#B3B3B3" width="32.727" height="5.859"></rect>
	<rect x="12.929" y="60.224" fill="#B3B3B3" width="5.926" height="1.347"></rect>
	<path fill="#B3B3B3" d="M28.485,55.577c-1.053,0-1.933-0.734-2.162-1.717c-0.038,0.162-0.06,0.331-0.06,0.505
		c0,1.227,0.995,2.222,2.222,2.222s2.222-0.995,2.222-2.222c0-0.174-0.022-0.343-0.06-0.505
		C30.418,54.844,29.538,55.577,28.485,55.577z"></path>
	<path fill="#B3B3B3" d="M27.071,54.567c0-0.781,0.633-1.414,1.414-1.414c0.781,0,1.414,0.633,1.414,1.414v6.061
		c0,0.781-0.633,1.414-1.414,1.414c-0.781,0-1.414-0.633-1.414-1.414V54.567z"></path>
	<rect x="81.919" y="47.516" fill="#B3B3B3" width="15.286" height="0.5"></rect>
</g>
<g id="shadow">

			<rect x="56.927" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="57.836" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="58.745" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="59.655" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="60.564" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="61.473" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="62.382" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="63.291" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>

			<rect x="56.927" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="57.836" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="58.745" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="59.655" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="60.564" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="61.473" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="62.382" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>
			<rect x="63.291" y="55.308" fill="#808080" width="0.59" height="13.333"></rect>


			<path fill="#808080" d="M49.383,44.702c-0.73-0.931-1.199-2.078-1.282-3.333c-0.009,0.134-0.02,0.268-0.02,0.404
				c0,1.063,0.275,2.061,0.756,2.929H49.383z"></path>
			<path fill="#808080" d="M60.182,41.369c-0.147,2.216-1.483,4.103-3.376,5.035l-1.238,1.254c2.657-0.643,4.634-3.03,4.634-5.885
				C60.202,41.636,60.19,41.503,60.182,41.369z"></path>

			<path fill="#666666" d="M49.383,44.702c-0.73-0.931-1.199-2.078-1.282-3.333c-0.009,0.134-0.02,0.268-0.02,0.404
				c0,1.063,0.275,2.061,0.756,2.929H49.383z"></path>
			<path fill="#666666" d="M60.182,41.369c-0.147,2.216-1.483,4.103-3.376,5.035l-1.238,1.254c2.657-0.643,4.634-3.03,4.634-5.885
				C60.202,41.636,60.19,41.503,60.182,41.369z"></path>

	<path fill="#808080" d="M36.162,44.87v-2.559c0-0.929,0.816-1.684,1.818-1.684h10.212c0.024-0.127,0.056-0.251,0.088-0.375H37.419
		c-1.038,0-1.883,0.814-1.883,1.816v2.802H36.162z"></path>
	<g>
		<g>
			<circle fill="#808080" cx="68.388" cy="64.736" r="0.52"></circle>
			<circle fill="#808080" cx="75.272" cy="64.736" r="0.52"></circle>
			<circle fill="#808080" cx="82.155" cy="64.736" r="0.52"></circle>
			<circle fill="#808080" cx="89.038" cy="64.736" r="0.52"></circle>
			<circle fill="#808080" cx="95.921" cy="64.736" r="0.52"></circle>
		</g>
		<g>
			<circle fill="#808080" cx="68.388" cy="64.736" r="0.52"></circle>
			<circle fill="#808080" cx="75.272" cy="64.736" r="0.52"></circle>
			<circle fill="#808080" cx="82.155" cy="64.736" r="0.52"></circle>
			<circle fill="#808080" cx="89.038" cy="64.736" r="0.52"></circle>
			<circle fill="#808080" cx="95.921" cy="64.736" r="0.52"></circle>
		</g>
	</g>
	<g>
		<g>
			<circle fill="#808080" cx="68.388" cy="59.988" r="0.52"></circle>
			<circle fill="#808080" cx="75.272" cy="59.988" r="0.52"></circle>
			<circle fill="#808080" cx="82.155" cy="59.988" r="0.52"></circle>
			<circle fill="#808080" cx="89.038" cy="59.988" r="0.52"></circle>
			<circle fill="#808080" cx="95.921" cy="59.988" r="0.52"></circle>
		</g>
		<g>
			<circle fill="#808080" cx="68.388" cy="59.988" r="0.52"></circle>
			<circle fill="#808080" cx="75.272" cy="59.988" r="0.52"></circle>
			<circle fill="#808080" cx="82.155" cy="59.988" r="0.52"></circle>
			<circle fill="#808080" cx="89.038" cy="59.988" r="0.52"></circle>
			<circle fill="#808080" cx="95.921" cy="59.988" r="0.52"></circle>
		</g>
	</g>
	<path fill="#808080" d="M29.899,60.628c0,0.781-0.633,1.414-1.414,1.414c-0.781,0-1.414-0.633-1.414-1.414H29.899z"></path>
	<polygon fill="#808080" points="2.472,71.032 1.972,71.032 1.972,35.125 10.505,35.125 10.505,35.625 2.472,35.625 	"></polygon>
	<rect x="3.636" y="72.499" fill="#808080" width="5.503" height="0.808"></rect>
	<polygon fill="#808080" points="19,74.724 18.386,74.724 18.386,70.666 23.139,70.666 23.139,71.474 19,71.474 	"></polygon>
	<polygon fill="#808080" points="50.75,74.724 50.136,74.724 50.136,70.666 54.889,70.666 54.889,71.474 50.75,71.474 	"></polygon>
	<polygon fill="#808080" points="68.5,74.974 67.886,74.974 67.886,71.916 72.639,71.916 72.639,72.724 68.5,72.724 	"></polygon>
	<polygon fill="#808080" points="84.75,74.974 84.136,74.974 84.136,71.916 88.889,71.916 88.889,72.724 84.75,72.724 	"></polygon>
	<g>
		<g>
			<rect x="70.302" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="71.211" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="72.12" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="73.03" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="73.939" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="74.848" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="75.757" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="76.666" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
		</g>
		<g>
			<rect x="70.302" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="71.211" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="72.12" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="73.03" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="73.939" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="74.848" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="75.757" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="76.666" y="54.558" fill="#808080" width="0.59" height="3.708"></rect>
		</g>
	</g>
	<g>
		<g>
			<rect x="90.302" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="91.211" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="92.12" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="93.03" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="93.939" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="94.848" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="95.757" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="96.666" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
		</g>
		<g>
			<rect x="90.302" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="91.211" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="92.12" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="93.03" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="93.939" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="94.848" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="95.757" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
			<rect x="96.666" y="66.558" fill="#808080" width="0.59" height="3.708"></rect>
		</g>
	</g>
	<rect x="55.758" y="71.874" fill="#808080" width="9.832" height="1.01"></rect>
	<polygon fill="#808080" points="49.562,70.729 48.754,70.729 48.754,69.921 37.71,69.921 42.02,72.951 49.562,72.951 	"></polygon>
	<path fill="#808080" d="M32.727,45.369c0-0.275-0.225-0.5-0.5-0.5h-0.116c-0.275,0-0.5-0.225-0.5-0.5v-0.03
		c0-0.275-0.225-0.5-0.5-0.5H30.5c-0.275,0-0.5,0.225-0.5,0.5v0.03c0,0.275-0.153,0.5-0.341,0.5s-0.341-0.225-0.341-0.5v-0.03
		c0-0.275-0.225-0.5-0.5-0.5h-1.603c-0.275,0-0.5,0.225-0.5,0.5v0.03c0,0.275-0.225,0.5-0.5,0.5h-0.24c-0.275,0-0.5-0.225-0.5-0.5
		v-0.03c0-0.275-0.225-0.5-0.5-0.5h-1.603c-0.275,0-0.5,0.225-0.5,0.5v0.03c0,0.275-0.225,0.5-0.5,0.5h-0.054
		c-0.275,0-0.5,0.225-0.5,0.5v3.015c0,0.275,0.225,0.5,0.5,0.5h0.054c0.275,0,0.5,0.225,0.5,0.5v0.03c0,0.275,0.225,0.5,0.5,0.5
		h1.603c0.275,0,0.5-0.225,0.5-0.5v-0.03c0-0.275,0.225-0.5,0.5-0.5h0.24c0.275,0,0.5,0.225,0.5,0.5v0.03c0,0.275,0.225,0.5,0.5,0.5
		h1.603c0.275,0,0.5-0.225,0.5-0.5v-0.03c0-0.275,0.153-0.5,0.341-0.5S30,49.109,30,49.384v0.03c0,0.275,0.225,0.5,0.5,0.5h0.612
		c0.275,0,0.5-0.225,0.5-0.5v-0.03c0-0.275,0.225-0.5,0.5-0.5h0.116c0.275,0,0.5-0.225,0.5-0.5V45.369z"></path>
	<path fill="#808080" d="M26.97,58.507h-0.455c-0.416,0-0.874-0.434-1.112-0.862l-1.235-2.224c-0.241-0.435-0.43-1.164-0.43-1.661
		v-4.344h0.606v4.344c0,0.396,0.162,1.021,0.354,1.366l1.235,2.224c0.185,0.334,0.486,0.55,0.582,0.552h0.455V58.507z"></path>
	<path fill="#808080" d="M38.99,56.082h-6.263c-0.612,0-1.111-0.498-1.111-1.11v-2.778c0-0.278-0.227-0.505-0.505-0.505h-1.566
		c-0.532,0-1.156-0.223-1.452-0.519c-0.295-0.295-0.518-0.811-0.518-1.198v-0.556h0.606v0.556c0,0.225,0.162,0.592,0.34,0.771
		c0.161,0.16,0.632,0.341,1.023,0.341h1.566c0.613,0,1.111,0.498,1.111,1.11v2.778c0,0.278,0.226,0.505,0.504,0.505h6.263
		c0.278,0,0.505-0.227,0.505-0.505v-1.818h0.606v1.818C40.101,55.584,39.603,56.082,38.99,56.082z"></path>
	<path fill="#808080" d="M43.838,57.698H33.737c-0.613,0-1.111-0.498-1.111-1.11v-2.627c0-0.317-0.262-0.69-0.56-0.799
		c-0.575-0.21-1.662-0.987-1.662-2.434V49.82h0.606v0.908c0,1.377,1.213,1.845,1.265,1.864c0.536,0.195,0.958,0.797,0.958,1.368
		v2.627c0,0.278,0.227,0.505,0.505,0.505h10.101c0.278,0,0.505-0.227,0.505-0.505v-1.213h0.606v1.213
		C44.95,57.2,44.451,57.698,43.838,57.698z"></path>
	<rect x="83.232" y="45.45" fill="#808080" width="1.886" height="1.323"></rect>
	<rect x="93.872" y="45.45" fill="#808080" width="1.886" height="1.323"></rect>
	<polygon fill="#808080" points="64.748,69.416 56.465,69.416 56.465,69.012 64.343,69.012 64.343,54.77 64.748,54.77 	"></polygon>
	<path fill="#808080" d="M18.855,39.942h-7.138v0.417h7.138c1.002,0,1.818,0.815,1.818,1.818
		C20.673,40.944,19.857,39.942,18.855,39.942z"></path>
	<polygon fill="#808080" points="4.175,78.292 48.215,78.292 48.215,77.282 3.165,77.282 3.165,82.358 4.175,82.358 	"></polygon>
	<polygon fill="#808080" points="52.727,78.292 96.768,78.292 96.768,77.282 51.717,77.282 51.717,82.358 52.727,82.358 	"></polygon>
</g>
<g id="hlight">
	<path fill="#FFFFFF" d="M49.572,37.8H37.98c-2.562,0-4.646,2.023-4.646,4.512c0-2.006,2.084-3.637,4.646-3.637h10.959
		C49.125,38.364,49.336,38.071,49.572,37.8z"></path>
	<path fill="#FFFFFF" d="M28.485,52.648c1.053,0,1.933,0.734,2.162,1.717c0.038-0.162,0.06-0.331,0.06-0.505
		c0-1.227-0.995-2.222-2.222-2.222s-2.222,0.995-2.222,2.222c0,0.174,0.022,0.343,0.06,0.505
		C26.551,53.382,27.432,52.648,28.485,52.648z"></path>
	<polygon fill="#FFFFFF" points="56.614,69.314 56.114,69.314 56.114,54.418 64.242,54.418 64.242,54.918 56.614,54.918 	"></polygon>
	<rect x="49.625" y="44.25" fill="#FFFFFF" width="7.875" height="0.5"></rect>
	<path fill="#FFFFFF" d="M54.141,36.52c3.211,0,5.831,2.499,6.04,5.657c0.009-0.134,0.02-0.268,0.02-0.404
		c0-3.347-2.713-6.061-6.061-6.061c-3.347,0-6.061,2.713-6.061,6.061c0,0.136,0.012,0.27,0.02,0.404
		C48.31,39.019,50.931,36.52,54.141,36.52z"></path>
	<rect x="12.929" y="46.474" fill="#FFFFFF" width="5.926" height="1.347"></rect>
	<path fill="#FFFFFF" d="M27.534,54.205c0-0.525,0.426-0.951,0.951-0.951c0.525,0,0.951,0.426,0.951,0.951"></path>
	<path fill="#FFFFFF" d="M18.855,37.53h-7.138v0.5h7.138c2.562,0,4.646,1.86,4.646,4.146C23.501,39.614,21.417,37.53,18.855,37.53z"></path>
	<rect x="55.421" y="51.066" fill="#FFFFFF" width="10.168" height="1.01"></rect>
</g>
</g>

  <script type="text/javascript">
    <![CDATA[
    /*
    #####################################
    #           How to Use              #
    #####################################

    Variables with the following prefix:

    _pb_ = bool   parameter ( true or false )
    _pn_ = number parameter ( Int, Float, Real etc )
    _ps_ = string parameter ( string can be entered directly )
    _pc_ = color parameter in hex color code ( #00ff00ff )

    Indicate variable type to be used in Fuxa Properties and binding of Tags, Important! they have to be place within:

    //!export-start
    let _pn_setState = 0;
    //!export-end

  

    There are 2x Functions to handle sending and receiving data between Fuxa and the SVG

    // Recieve Variables From Fuxa
    function putValue(id, value) { } 
    
    // Send Variables To Fuxa
    function postValue(id, value) {
      console.error('Not defined!');
    }

    The ID is the name of the variable _pn_setState for example and value is the value to be sent or received from Fuxa


    This SVG uses an INT/Number Variable to change the State and State of the SVG:

    0 = Off
    1 = Run
    2 = Warning
    3 = Fault
    4 = Invalid
    5 = Spare

    You can also use the bool field and this will change the state between 0 = off and 1 = run 

    You can also set the color for each state in Fuxa using HEX color code #b4b4b4
    The Default Blink Interval is 500ms but can also be changed in Fuxa in MS resolution


    This SVG is a bit complex as we have different shades of color, we calculate the offset colors
    The Shade Values are from -100 to 100, where 0 is not changed and -100 is black and 100 is white

    These style of SVGs can be found here:

    https://www.opto22.com/support/resources-tools/demos/svg-image-library

    By Adding this script to there downloaded SVG it should work without any modification ( may have to check group element names )
    Make sure the script is within the SVG tags

    <svg>
      SVG Content Here
      <script>
        JS Script Content Here
      </script>
    </svg>

    */

	  // Global Parameters and Variables
    //!export-start
    let _pn_setState         = 0;
    let _pb_boolState        = false;
	  let _pn_setInterval      = 500;
    let _pc_state0Colour     = '#b4b4b4';
    let _pc_state1Colour     = '#006837';
    let _pc_state2Colour     = '#ff9500';
    let _pc_state3Colour     = '#ff0000';
    let _pc_state4Colour     = '#3c3c3c';
    let _pc_state5Colour     = '#dcdcdc';
    let _pn_lightShade       = 50;
    let _pn_highLightShade   = 90;
    let _pn_darkShade        = 15;
    let _pn_shadowShade      = -15;
    //!export-end
	  let stateNumber = 1;
    let blinkInterval;

    // Function to update the color based on the set state
    function logic() {

      switch (stateNumber) {
        case 0: // off
          setBaseColor( _pc_state0Colour);
		      clearBlinking();
          break; 
        case 1: // run
          setBaseColor( _pc_state1Colour);
		      clearBlinking();
          break;
        case 2: // warning
          setBaseColor( _pc_state2Colour);
		      clearBlinking();
          break;
        case 3: // fault
		      startBlinking( _pc_state0Colour, _pc_state3Colour, _pn_setInterval );
          break;
        case 4: // invalid 
          setBaseColor( _pc_state4Colour);
		      clearBlinking();
          break;
        case 5: // spare
          setBaseColor( _pc_state5Colour);
		      clearBlinking();
          break;
        default:
          console.log('Undefined State');
		      clearBlinking();
      }
    }

    // Initial setup
    function init() {
      logic(); // Initial state rendering
    }

    // Function to update values from Fuxa
    function putValue(id, value) {
      if (id === '_pn_setState') {
        stateNumber = value;
        logic(); 
      }
      if (id === '_pb_boolState') {
        _pb_boolState = value;
        if (_pb_boolState === true) {
          stateNumber = 1;
        } else if (_pb_boolState === false) {
          stateNumber = 0;
        }
        logic(); 
      }
	    if (id === '_pn_setInterval'   ) _pn_setInterval    = value;
      if (id === '_pc_state0Colour'  ) _pc_state0Colour   = value;
      if (id === '_pc_state1Colour'  ) _pc_state1Colour   = value;
      if (id === '_pc_state2Colour'  ) _pc_state2Colour   = value;
      if (id === '_pc_state3Colour'  ) _pc_state3Colour   = value;
      if (id === '_pc_state4Colour'  ) _pc_state4Colour   = value;
      if (id === '_pc_state5Colour'  ) _pc_state5Colour   = value;
      if (id === '_pn_lightShade'    ) _pn_lightShade     = value;
      if (id === '_pn_highLightShade') _pn_highLightShade = value;
      if (id === '_pn_darkShade'     ) _pn_darkShade      = value;
      if (id === '_pn_shadowShade'   ) _pn_shadowShade    = value;
    }

    // Function to send values back to Fuxa (placeholder)
    function postValue(id, value) {
      console.error('Not defined!');
    }

    // Initialize the SVG
    init();

	// Function to update the color for the base shape group
    function setBaseColor(baseColor) {
      // Define color manipulations based on base color
      const darkColor   = percentColor(baseColor, _pn_darkShade);
      const shadowColor = percentColor(baseColor, _pn_shadowShade);
      const lightColor  = percentColor(baseColor, _pn_lightShade);
      const hlightColor = percentColor(baseColor, _pn_highLightShade);

	  document.getElementById('shape').querySelectorAll('*').forEach(function(elem) {
      elem.setAttribute('fill', baseColor);
      });
      document.getElementById('dark').querySelectorAll('*').forEach(function(elem) {
      elem.setAttribute('fill', darkColor);
      });
      document.getElementById('shadow').querySelectorAll('*').forEach(function(elem) {
      elem.setAttribute('fill', shadowColor);
      });
      document.getElementById('light').querySelectorAll('*').forEach(function(elem) {
      elem.setAttribute('fill', lightColor);
      });
	  document.getElementById('hlight').querySelectorAll('*').forEach(function(elem) {
      elem.setAttribute('fill', hlightColor);
      });
	}

    // Function to manipulate color brightness/darkness (-100% = Black) (0 = unchanged) (100% = White)
    function percentColor(color, percent) {
      let R = parseInt(color.substring(1, 3), 16);
      let G = parseInt(color.substring(3, 5), 16);
      let B = parseInt(color.substring(5, 7), 16);

      // Calculate the adjustment factor based on the percentage
      if (percent > 0) {
          // Lightening - move each channel closer to 255 (white)
          R = Math.round(R + (255 - R) * (percent / 100));
          G = Math.round(G + (255 - G) * (percent / 100));
          B = Math.round(B + (255 - B) * (percent / 100));
      } else {
          // Darkening - move each channel closer to 0 (black)
          R = Math.round(R * (1 + (percent / 100)));
          G = Math.round(G * (1 + (percent / 100)));
          B = Math.round(B * (1 + (percent / 100)));
      }

      // Clamp values to the [0, 255] range
      R = Math.max(0, Math.min(255, R));
      G = Math.max(0, Math.min(255, G));
      B = Math.max(0, Math.min(255, B));

      // Convert back to hexadecimal
      const RR = (R.toString(16).length === 1) ? "0" + R.toString(16) : R.toString(16);
      const GG = (G.toString(16).length === 1) ? "0" + G.toString(16) : G.toString(16);
      const BB = (B.toString(16).length === 1) ? "0" + B.toString(16) : B.toString(16);

      return "#" + RR + GG + BB;
    }

	// Function to start blinking between two colors
    function startBlinking(color1, color2, interval) {
      clearBlinking(); // Clear any existing blinking interval
    
      let isColor1 = true; 
      blinkInterval = setInterval(function() {
        const checkDestroy = document.getElementById('Layer_1'); // Important must be name of the SVG!
        if (!checkDestroy) {
          clearBlinking(); 
          return;
        }
        if (isColor1) {
          setBaseColor(color1); 
        } else {
          setBaseColor(color2); 
        }
        isColor1 = !isColor1; 
      }, interval);

      // Set up the MutationObserver to watch for removal of the SVG element
      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          mutation.removedNodes.forEach((node) => {
            if (node.id === 'Layer_1') { // Important must be name of the SVG!
              clearBlinking(); 
              observer.disconnect(); 
            }
          });
        });
      });

      // Start observing the body or a parent element of the SVG
      observer.observe(document.body, { childList: true, subtree: true }); 
    }

    // Function to clear the blinking interval
    function clearBlinking() {
      if (blinkInterval) {
        clearInterval(blinkInterval);
        blinkInterval = null;
      }
    }

    ]]>
  </script>

</svg>